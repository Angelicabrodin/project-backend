{
  "{\"sourceRoot\":\"/Users/angelicabrodin/Desktop/backend/project-backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/angelicabrodin/Desktop/backend/project-backend\",\"filename\":\"/Users/angelicabrodin/Desktop/backend/project-backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/angelicabrodin/Desktop/backend/project-backend\",\"plugins\":[],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/angelicabrodin/Desktop/backend/project-backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/angelicabrodin/Desktop/backend/project-backend",
      "filename": "/Users/angelicabrodin/Desktop/backend/project-backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/angelicabrodin/Desktop/backend/project-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/angelicabrodin/Desktop/backend/project-backend/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/angelicabrodin/Desktop/backend/project-backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/angelicabrodin/Desktop/backend/project-backend",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport mongoose from 'mongoose';\nimport bcrypt from 'bcrypt-nodejs';\nimport crypto from 'crypto';\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/authAPI\";\nmongoose.connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nmongoose.Promise = Promise;\nconst User = mongoose.model('User', {\n  name: {\n    type: String,\n    required: true,\n    minlength: 2,\n    maxlength: 25\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  accesstoken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString('hex')\n  }\n});\nconst port = process.env.PORT || 8080;\nconst app = express(); // Add middlewares to enable cors and json body parsing\n\napp.use(cors());\napp.use(bodyParser.json());\n\nconst authenticateUser = async (req, res, next) => {\n  try {\n    const user = await User.findOne({\n      accessToken: req.header('Authorization')\n    });\n\n    if (user) {\n      req.user = user;\n      next();\n    } else {\n      res.status(401).json({\n        loggedOut: true,\n        message: 'Please try logging in again'\n      });\n    }\n  } catch (err) {\n    res.status(403).json({\n      message: 'Access token is missing or wrong',\n      error: err.errors\n    });\n  }\n}; // Do I want to name it Users here or what should I use, depending on the route I am going to use in the StartPage??\n\n\napp.post('/users', async (req, res) => {\n  try {\n    const {\n      name,\n      email,\n      password\n    } = req.body;\n    const user = new User({\n      name,\n      email,\n      password: bcrypt.hashSync(password)\n    });\n    user.save();\n    res.status(201).json({\n      id: user._id,\n      accessToken: user.accessToken\n    });\n  } catch (err) {\n    res.status(400).json({\n      message: \"Could not create user\",\n      errors: err.errors\n    });\n  }\n}); // The same here, what will I call the endpoint??\n\napp.post('/sessions', async (req, res) => {\n  const user = await User.findOne({\n    email: req.body.email\n  });\n\n  if (user && bcrypt.compareSync(req.body.password, user.password)) {\n    res.json({\n      userId: user._id,\n      accessToken: user.accessToken\n    });\n  } else {\n    res.json({\n      notFound: true\n    });\n  }\n}); // the same here, I need to decide what to name my endpoints??\n\napp.get('/users/current', authenticateUser);\napp.get('/users/current', (req, res) => {\n  res.json(req.user);\n}); // Start defining your routes here\n\napp.get('/', (req, res) => {\n  res.send('Hello world');\n}); // Start the server\n\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "cors",
        "mongoose",
        "bcrypt",
        "crypto",
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "User",
        "model",
        "name",
        "type",
        "String",
        "required",
        "minlength",
        "maxlength",
        "email",
        "unique",
        "password",
        "accesstoken",
        "default",
        "randomBytes",
        "toString",
        "port",
        "PORT",
        "app",
        "use",
        "json",
        "authenticateUser",
        "req",
        "res",
        "next",
        "user",
        "findOne",
        "accessToken",
        "header",
        "status",
        "loggedOut",
        "message",
        "err",
        "error",
        "errors",
        "post",
        "body",
        "hashSync",
        "save",
        "id",
        "_id",
        "compareSync",
        "userId",
        "notFound",
        "get",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/angelicabrodin/Desktop/backend/project-backend",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport mongoose from 'mongoose'\nimport bcrypt from 'bcrypt-nodejs'\nimport crypto from 'crypto'\n\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/authAPI\"\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })\nmongoose.Promise = Promise\n\nconst User = mongoose.model('User', {\n  name: {\n    type: String,\n    required: true,\n    minlength: 2,\n    maxlength: 25\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  accesstoken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString('hex')\n  }\n})\n\nconst port = process.env.PORT || 8080\nconst app = express()\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors())\napp.use(bodyParser.json())\n\n\nconst authenticateUser = async (req, res, next) => {\n  try {\n    const user = await User.findOne({ accessToken: req.header('Authorization') })\n    if (user) {\n      req.user = user\n      next()\n    } else {\n      res.status(401).json({ loggedOut: true, message: 'Please try logging in again' })\n    }\n  } catch (err) {\n    res.status(403).json({ message: 'Access token is missing or wrong', error: err.errors })\n  }\n}\n\n// Do I want to name it Users here or what should I use, depending on the route I am going to use in the StartPage??\n\napp.post('/users', async (req, res) => {\n  try {\n    const { name, email, password } = req.body\n    const user = new User({ name, email, password: bcrypt.hashSync(password) })\n    user.save()\n    res.status(201).json({ id: user._id, accessToken: user.accessToken })\n  } catch (err) {\n    res.status(400).json({ message: \"Could not create user\", errors: err.errors })\n  }\n})\n\n// The same here, what will I call the endpoint??\n\napp.post('/sessions', async (req, res) => {\n  const user = await User.findOne({ email: req.body.email })\n  if (user && bcrypt.compareSync(req.body.password, user.password)) {\n    res.json({ userId: user._id, accessToken: user.accessToken })\n  } else {\n    res.json({ notFound: true })\n  }\n})\n\n// the same here, I need to decide what to name my endpoints??\n\napp.get('/users/current', authenticateUser)\napp.get('/users/current', (req, res) => {\n  res.json(req.user)\n})\n\n\n// Start defining your routes here\napp.get('/', (req, res) => {\n  res.send('Hello world')\n})\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`)\n})\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1583159048318
  },
  "{\"sourceRoot\":\"/Users/angelicabrodin/Desktop/backend/project-backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/angelicabrodin/Desktop/backend/project-backend\",\"filename\":\"/Users/angelicabrodin/Desktop/backend/project-backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/angelicabrodin/Desktop/backend/project-backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/angelicabrodin/Desktop/backend/project-backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/angelicabrodin/Desktop/backend/project-backend",
      "filename": "/Users/angelicabrodin/Desktop/backend/project-backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/angelicabrodin/Desktop/backend/project-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/angelicabrodin/Desktop/backend/project-backend/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/angelicabrodin/Desktop/backend/project-backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/angelicabrodin/Desktop/backend/project-backend",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaApp\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise;\n\nvar User = _mongoose[\"default\"].model('User', {\n  name: {\n    type: String,\n    minlength: 2,\n    maxlength: 25\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString('hex');\n    }\n  }\n});\n\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\n\nvar authenticateUser =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res, next) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return User.findOne({\n              accessToken: req.header('Authorization')\n            });\n\n          case 3:\n            user = _context.sent;\n\n            if (user) {\n              req.user = user;\n              next();\n            } else {\n              res.status(401).json({\n                loggedOut: true,\n                message: 'Please try logging in again'\n              });\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(403).json({\n              message: 'Access token is missing or wrong',\n              error: _context.t0.errors\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function authenticateUser(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Start defining your routes here\n\n\napp.get('/', function (req, res) {\n  res.send('Hello world');\n}); // Do I want to name it Users here or what should I use, depending on the route I am going to use in the StartPage??\n\napp.post('/register',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, name, email, password, user;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            try {\n              _req$body = req.body, name = _req$body.name, email = _req$body.email, password = _req$body.password;\n              user = new User({\n                name: name,\n                email: email,\n                password: _bcryptNodejs[\"default\"].hashSync(password)\n              });\n              user.save();\n              res.status(201).json({\n                id: user._id,\n                accessToken: user.accessToken\n              });\n            } catch (err) {\n              res.status(400).json({\n                message: \"Could not register user\",\n                errors: err.errors\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // The same here, what will I call the endpoint??\n\napp.post('/login',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return User.findOne({\n              email: req.body.email\n            });\n\n          case 2:\n            user = _context3.sent;\n\n            if (user && _bcryptNodejs[\"default\"].compareSync(req.body.password, user.password)) {\n              // Success\n              res.json({\n                userId: user._id,\n                accessToken: user.accessToken\n              });\n            } else {\n              // Failure\n              // a. user does not exist\n              // b. encrypted password does not match\n              res.json({\n                notFound: true\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // the same here, I need to decide what to name my endpoints??\n\napp.get('/user', authenticateUser); // The async here is from vans auth code\n\napp.get('/user', function (req, res) {\n  // This will only happen if the next() function is called from the middleware\n  // Now we can access the user.. \n  res.json(req.user); // res.send({ secret: 'This is a super secret message.' })\n  // res.send('Welcome')\n}); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "User",
        "model",
        "name",
        "type",
        "String",
        "minlength",
        "maxlength",
        "email",
        "required",
        "unique",
        "password",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "json",
        "authenticateUser",
        "req",
        "res",
        "next",
        "findOne",
        "header",
        "user",
        "status",
        "loggedOut",
        "message",
        "error",
        "errors",
        "get",
        "send",
        "post",
        "body",
        "bcrypt",
        "hashSync",
        "save",
        "id",
        "_id",
        "err",
        "compareSync",
        "userId",
        "notFound",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/angelicabrodin/Desktop/backend/project-backend",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport mongoose from 'mongoose'\nimport bcrypt from 'bcrypt-nodejs'\nimport crypto from 'crypto'\n\n\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/yogaApp\"\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })\nmongoose.Promise = Promise\n\nconst User = mongoose.model('User', {\n  name: {\n    type: String,\n    minlength: 2,\n    maxlength: 25\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString('hex')\n  }\n})\n\nconst port = process.env.PORT || 8080\nconst app = express()\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors())\napp.use(bodyParser.json())\n\n\nconst authenticateUser = async (req, res, next) => {\n  try {\n    const user = await User.findOne({ accessToken: req.header('Authorization') })\n    if (user) {\n      req.user = user\n      next()\n    } else {\n      res.status(401).json({ loggedOut: true, message: 'Please try logging in again' })\n    }\n  } catch (err) {\n    res.status(403).json({ message: 'Access token is missing or wrong', error: err.errors })\n  }\n}\n\n// Start defining your routes here\napp.get('/', (req, res) => {\n  res.send('Hello world')\n})\n\n// Do I want to name it Users here or what should I use, depending on the route I am going to use in the StartPage??\n\napp.post('/register', async (req, res) => {\n  try {\n    const { name, email, password } = req.body\n    const user = new User({ name, email, password: bcrypt.hashSync(password) })\n    user.save()\n    res.status(201).json({ id: user._id, accessToken: user.accessToken })\n  } catch (err) {\n    res.status(400).json({ message: \"Could not register user\", errors: err.errors })\n  }\n})\n\n// The same here, what will I call the endpoint??\n\napp.post('/login', async (req, res) => {\n  const user = await User.findOne({ email: req.body.email })\n  if (user && bcrypt.compareSync(req.body.password, user.password)) {\n    // Success\n    res.json({ userId: user._id, accessToken: user.accessToken })\n  } else {\n    // Failure\n    // a. user does not exist\n    // b. encrypted password does not match\n    res.json({ notFound: true })\n  }\n})\n\n// the same here, I need to decide what to name my endpoints??\n\napp.get('/user', authenticateUser)\n// The async here is from vans auth code\napp.get('/user', (req, res) => {\n  // This will only happen if the next() function is called from the middleware\n  // Now we can access the user.. \n  res.json(req.user)\n  // res.send({ secret: 'This is a super secret message.' })\n  // res.send('Welcome')\n})\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`)\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584454068012
  }
}